/*
Copyright 2019 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/google/knative-gcp/pkg/apis/events/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudAuditLogLister helps list CloudAuditLogs.
type CloudAuditLogLister interface {
	// List lists all CloudAuditLogs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLog, err error)
	// CloudAuditLogs returns an object that can list and get CloudAuditLogs.
	CloudAuditLogs(namespace string) CloudAuditLogNamespaceLister
	CloudAuditLogListerExpansion
}

// cloudAuditLogLister implements the CloudAuditLogLister interface.
type cloudAuditLogLister struct {
	indexer cache.Indexer
}

// NewCloudAuditLogLister returns a new CloudAuditLogLister.
func NewCloudAuditLogLister(indexer cache.Indexer) CloudAuditLogLister {
	return &cloudAuditLogLister{indexer: indexer}
}

// List lists all CloudAuditLogs in the indexer.
func (s *cloudAuditLogLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLog, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAuditLog))
	})
	return ret, err
}

// CloudAuditLogs returns an object that can list and get CloudAuditLogs.
func (s *cloudAuditLogLister) CloudAuditLogs(namespace string) CloudAuditLogNamespaceLister {
	return cloudAuditLogNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudAuditLogNamespaceLister helps list and get CloudAuditLogs.
type CloudAuditLogNamespaceLister interface {
	// List lists all CloudAuditLogs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLog, err error)
	// Get retrieves the CloudAuditLog from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudAuditLog, error)
	CloudAuditLogNamespaceListerExpansion
}

// cloudAuditLogNamespaceLister implements the CloudAuditLogNamespaceLister
// interface.
type cloudAuditLogNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudAuditLogs in the indexer for a given namespace.
func (s cloudAuditLogNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLog, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAuditLog))
	})
	return ret, err
}

// Get retrieves the CloudAuditLog from the indexer for a given namespace and name.
func (s cloudAuditLogNamespaceLister) Get(name string) (*v1alpha1.CloudAuditLog, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudauditlog"), name)
	}
	return obj.(*v1alpha1.CloudAuditLog), nil
}
